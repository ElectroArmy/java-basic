// Switch Case

start with return
return ->


// Looping Statement
Repeat again & again use loop
# while loop

boolean bunsAvailable = true;
while(bunsAvailable) {
  //prepare Burger
  
  if(nomoreBurns) {
    bunsAvailable = false;
  }
}

Loop ကိုပြီးအောင် ရေးသင့်တယ်
Unwanted CPU Memory usage ကို ကာကွယ်ဖို့ရန်


# do while loop က do ကို တကြိမ်အလုပ်လုပ်တယ်
# ပီးမှ Condition စစ်တယ် မှန်ရင် do ကိုပြန်ခိုင်းတယ်

boolean exitSelected = false;

do{
  String selectedOption = displayMenuToUser();
  
  if(selectedOption)
}

# while loop က Condition အရင်စစ်တယ်


// Arrays
// MultiDimensionArray

//SaveToArray
// int[] arr1 = {1,2,3,4,5}
arr1 ==> int[5] { 1, 2, 3, 4, 5 }

 int[] arr2 = new int[0]
arr2 ==> int[0] {  }

arr2 = Arrays.copyOf(arr1, arr1.length)
arr2 ==> int[5] { 1, 2, 3, 4, 5 }

arr2
arr2 ==> int[5] { 1, 2, 3, 4, 5 }

arr2 = Arrays.copyOf(arr2,arr2.length+1)
arr2 ==> int[6] { 1, 2, 3, 4, 5, 0 }




// Return Statement
# Return ပြန်ဖို့လိုအပ်တဲ့အခါသုံးရတယ်
# Void မဟုတ်သော Method များတွင် Return type သတ်မှတ်ပေးရတယ်
# Method တခုကို အဆုံးသတ်စေချင်ရင် သုံးတယ်, Looping Statements တွေ နှင့် Break တွေပါအကုန်ပီးဆုံးစေတယ်

// Break 
# Looping statements ကို အဆုံးသတ်စေချင်ရင် သုံးတယ်
# Loop ထဲမှာတွေ့ရင် လက်ရှိလုပ်နေတဲ့နေရာ မှ ရပ်တန့်နေစေတယ် 

// Continue
# လက်ရှိလုပ်နေတဲ့ နေရာ,  အစ ကနေပြန်စ စေတယ်

